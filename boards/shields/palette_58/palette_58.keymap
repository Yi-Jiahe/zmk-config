#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#define LAYER_COLOR_0 RGB_COLOR_HSB(220, 100, 25) // Blue
#define LAYER_COLOR_1 RGB_COLOR_HSB(120, 100, 25) // Green
#define LAYER_COLOR_2 RGB_COLOR_HSB(  0, 100, 25) // Red 

/ {
    macros {
        layer_one_underglow: layer_one_underglow {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 1>
                , <&macro_tap &rgb_ug LAYER_COLOR_1>
                , <&macro_pause_for_release>
                , <&macro_release &mo 1>
                , <&macro_tap &rgb_ug LAYER_COLOR_0>;
        };

        layer_two_underglow: layer_two_underglow {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 2>
                , <&macro_tap &rgb_ug LAYER_COLOR_2>
                , <&macro_pause_for_release>
                , <&macro_release &mo 2>
                , <&macro_tap &rgb_ug LAYER_COLOR_0>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_zmk_studio_unlock {
            timeout-ms = <50>;
            key-positions = <0 1 2 3>;
            bindings = <&studio_unlock>;
        };
    };
};

/ {
    behaviors {
        one_ht: layer_one_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&layer_one_underglow>, <&kp>;
        };

        two_ht: layer_two_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&layer_two_underglow>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   \   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// | C/ESC |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |  C/'  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |                   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//         | CAPS| ALT | GUI/-| SPACE|LOWER/[ |                 |RAISE/]| ENTER|  GUI/=|  ALT  | CTRL |
            bindings = <
&kp GRAVE     &kp N1 &kp N2    &kp N3    &kp N4         &kp N5                           &kp N6  &kp N7         &kp N8    &kp N9   &kp N0   &kp BSLH
&kp TAB       &kp Q  &kp W     &kp E     &kp R          &kp T                            &kp Y   &kp U          &kp I     &kp O    &kp P    &kp BSPC
&mt LCTRL ESC &kp A  &kp S     &kp D     &kp F          &kp G                            &kp H   &kp J          &kp K     &kp L    &kp SEMI &mt RCTRL SQT
&kp LSHFT     &kp Z  &kp X     &kp C     &kp V          &kp B                            &kp N   &kp M          &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
              &two_ht 0 CLCK  &kp LALT  &mt LGUI MINUS &kp SPACE &one_ht 0 LBKT              &two_ht 0 RBKT &kp RET &mt RGUI EQUAL &kp RALT  &kp RCTRL
            >;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |       |
// |       |  -  |  _  |  [   |  {   |  \   |                   |  |   |  }    |  ]    |  =   |   +   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans &kp F1    &kp F2    &kp F3   &kp F4    &kp F5                           &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&trans &kp N1    &kp N2    &kp N3   &kp N4    &kp N5                           &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans &kp EXCL  &kp AT    &kp HASH &kp DLLR  &kp PRCNT                        &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &trans
&trans &kp MINUS &kp UNDER &kp LBKT &kp LBRC  &kp BSLH                         &kp PIPE  &kp RBRC &kp RBKT        &kp EQUAL &kp PLUS  &trans
          &trans    &trans   &trans    &ext_power EP_TOG &trans            &trans &trans    &trans   &trans          &trans
            >;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |  F1  |  F2  |  F3   |  F4   |  F5  |                |  F6  |  F7  |  F8   |  F9  |  F10  |  F11  |
// |     | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | PGUP |  END |   ^   | HOME |  INS  |  F12  |
// |     | RGBT | RGB- | RGB+  |  BR-  |  BR+ |                | PGDN |   <- |   v   | ->   |  DEL  | C/CAPS|
// |     |BTCLR | HUD  | HUI   |  SAD  |  SAI |                | SCRL | PRVS | PLAY  | NEXT |  PSCR |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&trans &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                         &kp F6             &kp F7     &kp F8   &kp F9     &kp F10   &kp F11
&trans &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                   &kp PG_UP          &kp END    &kp UP   &kp HOME   &kp INS   &kp F12
&trans &rgb_ug RGB_TOG &rgb_ug RGB_EFR &rgb_ug RGB_EFF &rgb_ug RGB_BRD &rgb_ug RGB_BRI                &kp PG_DN          &kp LEFT   &kp DOWN &kp RIGHT  &kp DEL   &mt RCTRL CLCK
&trans &bt BT_CLR      &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI                &kp SLCK           &kp C_PREV &kp C_PP &kp C_NEXT &kp PSCRN &trans
               &trans          &trans          &trans          &trans          &trans            &trans &ext_power EP_TOG  &trans     &trans   &trans
            >;
        };
    };
 };